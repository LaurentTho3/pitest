#!/bin/sh

PATH_TO_APACHE_COMMONS_DIR=~/workspace/apache-commons/

if [ ${#} -le 1 ] || [ ${#} -gt 3 ]; then
	echo "command [subject] [set of mutation operators] [(optional) disabled]"
	exit
fi

# Subject
subject="commons-${1}"
# if [ ${1} = "cli" ]; then
# 	subject=commons-cli
# elif [ ${1} = "csv" ]; then
# 	subject=commons-csv
# elif [ ${1} = "math" ]; then
# 	subject=commons-math
# else
# 	echo "Give valid target, e.g., 'cli'"
# 	exit
# fi
PATH_TO_SUBJECT_DIR="${PATH_TO_APACHE_COMMONS_DIR}${subject}"
## Compile subject
cd ${PATH_TO_SUBJECT_DIR}
if [ -e ${PATH_TO_SUBJECT_DIR}/target/classes ] && [ -e ${PATH_TO_SUBJECT_DIR}/target/test-classes ] && [ -e ${PATH_TO_SUBJECT_DIR}/target/dependency ]; then
	echo "Already compiled: ${subject}"
else
	mvn compile test-compile dependency:copy-dependencies
fi
## Go back to AdaMu directory
cd - > /dev/null
if [ -e target/classes ] && [ -e target/test-classes ] && [ -e target/dependency ]; then
	echo "Already compiled: AdaMu"
else
	mvn compile test-compile dependency:copy-dependencies
fi

# Set of mutation operators
if [ ${2} = "defaults" ]; then
	op="defaults"
elif [ ${2} = "stronger" ]; then
	op="stronger"
elif [ ${2} = "all" ]; then
	op="all"
else
	echo "Give valid set of mutation operators (default, stronger, or all)"
	exit
fi

# Running ID
running_id=${3}

## Enable AdaMu
enalbed="enabled"
for arg in $@
do
    if [ "disabled" = "${arg}" ]; then
        echo "Disable AdaMu"
        enalbed=${arg}
    fi
done

# AdaMu
php sh/slack.php AdaMu "start to run: \"${subject}\" with \"${op}\" mutation operator set" > /dev/null
## Configure class path
cp="$(pwd)/target/classes"
cp="${cp}:$(pwd)/target/test-classes"
cp="${cp}:$(pwd)/target/dependency/*"
cp="${cp}:${PATH_TO_SUBJECT_DIR}/target/classes"
cp="${cp}:${PATH_TO_SUBJECT_DIR}/target/test-classes"
cp="${cp}:${PATH_TO_SUBJECT_DIR}/target/dependency/*"
## Run at subject directory due to relative file path problem
cd ${PATH_TO_SUBJECT_DIR}
## Run AdaMu
/usr/bin/java \
	-Xms6400m \
	-cp ${cp} \
	-Djava.util.logging.config.file=target/classes/logging.properties \
	jp.mzw.adamu.CLI run ${PATH_TO_SUBJECT_DIR} ${op} ${enalbed}
## Go back to AdaMu directory
cd - > /dev/null
php sh/slack.php AdaMu "Finished: \"${subject}\" with \"${op}\" mutation operator set" > /dev/null


# Copy results
ADAMU_DIR="results/${subject}_${running_id}"
if [ -d ${ADAMU_DIR} ]; then
        rm -r ${ADAMU_DIR}
fi
if [ -d ${ADAMU_DIR}_${running_id} ]; then
        rm -r ${ADAMU_DIR}_${running_id}
fi
mkdir -p ${ADAMU_DIR}
cp logs/latest/* ${ADAMU_DIR}


# Run R to visualize results
ADAMU_R_GRAPH_FILE="${ADAMU_DIR}/graph.R"
if [ -f ${ADAMU_R_GRAPH_FILE} ]; then
        rm ${ADAMU_R_GRAPH_FILE}
fi
echo "setwd(\"${ADAMU_DIR}\")" >> ${ADAMU_R_GRAPH_FILE}
echo "" >> ${ADAMU_R_GRAPH_FILE}
cat res/commands/graph.template.R >> ${ADAMU_R_GRAPH_FILE}
R --vanilla --slave < ${ADAMU_R_GRAPH_FILE}


# Options
for arg in $@
do
    ## Copy results to S3
    if [ "s3-copy" = "${arg}" ]; then
        echo "Copy results to S3"
        S3_URI=`cat sh/s3.uri`
        aws s3 cp ${ADAMU_DIR} ${S3_URI}/${subject}_${running_id} --recursive
    fi
    ## Stop EC2 instance
    if [ "ec2-stop" = "${arg}" ]; then
        echo "Stop EC2"
        sh/ec2-stop
    fi
done


